 [Private] [Final] [Logger] [Logger] [;] [Private] [Final] [Int] [Repetitions] [;] [Private] [Final] [Object] [Monitor=new, Object()] [;] [Private] [Static] [String] [Fqcn=, X, Logger.class.get, Name()+"."] [;] [Private] [Static] [X, Factory] [Factory=new, X, Factory()] [;] [String] [Suffix=""] [;] [Static] [String] [Filtered="output/filtered"] [;] [Static] [X, Logger] [Logger=(, X, Logger), X, Logger.get, Logger(, X, Logger, Test, Case.class)] [;] [Static] [String] [Temp="output/temp"] [;] [Static] [String] [Filtered="output/filtered"] [;] [Static] [String] [Exception1="java.lang., Exception: , Just testing"] [;] [Static] [String] [Exception2="\\s*at .*\\(.*\\)"] [;] [Static] [String] [Exception3="\\s*at .*\\((, Native , Method|, Unknown , Source)\\)"] [;] [Static] [String] [Exception4="\\s*at .*\\(.*, Compiled , Code\\)"] [;] [Static] [String] [Pat0="\\[main]\\ (, Debug|, Info|, Warn|, Error|, Fatal) .* - , Message \\d{1,2}"] [;] [Static] [String] [Pat1=, Filter., Iso8601, Pat+" "+, Pat0] [;] [Static] [String] [Pat2=, Filter., Absolute, Date, And, Time, Pat+" "+, Pat0] [;] [Static] [String] [Pat3=, Filter., Absolute, Time, Pat+" "+, Pat0] [;] [Static] [String] [Pat4=, Filter., Relative, Time, Pat+" "+, Pat0] [;] [Static] [String] [Pat5="\\[main]\\ (, Debug|, Info|, Warn|, Error|, Fatal) .* : , Message \\d{1,2}"] [;] [Static] [String] [Pat6="\\[main]\\ (, Debug|, Info |, Warn |, Error|, Fatal) org.apache.log4j., Enhanced, Pattern, Layout, Test, Case.common\\(, Enhanced, Pattern, Layout, Test, Case.java(:\\d{1,4})?\\): , Message \\d{1,2}"] [;] [Static] [String] [Pat11a="^(, Debug|, Info |, Warn |, Error|, Fatal) \\[main]\\ log4j., Enhanced, Pattern, Layout, Test: , Message \\d{1,2}"] [;] [Static] [String] [Pat11b="^(, Debug|, Info |, Warn |, Error|, Fatal) \\[main]\\ root: , Message \\d{1,2}"] [;] [Static] [String] [Pat12="^\\[main]\\ (, Debug|, Info |, Warn |, Error|, Fatal) "+"org.apache.log4j., Enhanced, Pattern, Layout, Test, Case.common\\(, Enhanced, Pattern, Layout, Test, Case.java:\\d{3}\\): "+", Message \\d{1,2}"] [;] [Static] [String] [Pat13="^\\[main]\\ (, Debug|, Info |, Warn |, Error|, Fatal) "+"apache.log4j., Enhanced, Pattern, Layout, Test, Case.common\\(, Enhanced, Pattern, Layout, Test, Case.java:\\d{3}\\): "+", Message \\d{1,2}"] [;] [Static] [String] [Pat14="^(, Trace|, Debug| , Info| , Warn|, Error|, Fatal)\\ \\d{1,2}\\ *- , Message \\d{1,2}"] [;] [Static] [String] [Pat, Mdc1=""] [;] [Logger] [Root] [;] [Logger] [Logger] [;] [Static] [Logger] [Cat=, Logger.get, Logger("x")] [;] [Static] [Int] [Max=1000] [;] [Static] [Logging, Event[]] [E=new, Logging, Event[, Max]] [;] [Static] [Logger] [Cat=, Logger.get, Logger("x")] [;] [Static] [Int] [Max=1000] [;] [Static] [Logging, Event[]] [E=new, Logging, Event[, Max]] [;] [Properties] [Props] [;] [Static] [String] [Output, File="output/, Pattern, Parser"] [;] [Static] [String] [Witness, File="witness/, Pattern, Parser"] [;] [Static] [String] [Msg, Pattern="%m%n"] [;] [Logger] [Root] [;] [Logger] [Logger] [;] [Static] [String] [Temp="output/temp"] [;] [Static] [Logger] [Logger=, Logger.get, Logger(, Hierarchy, Threshold, Test, Case.class)] [;] [Private] [Static] [Final] [Long] [Serial, Version, Uid=1, L] [;] [Private] [Final] [String] [Content, Type] [;] [Private] [Final] [Boolean] [Ignores, Throwable] [;] [Private] [Final] [String] [Header] [;] [Private] [Final] [String] [Footer] [;] [Private] [Static] [Final] [Long] [Serial, Version, Uid=1, L] [;] [Private] [Final] [Vector, Appender] [Appender] [;] [Private] [Final] [Level] [Level] [;] [Logger] [Logger] [;] [Appender] [A1] [;] [Appender] [A2] [;] [Resource, Bundle] [Rb, Us] [;] [Resource, Bundle] [Rb, Fr] [;] [Resource, Bundle] [Rb, Ch] [;] [Static] [String] [Msg=", M"] [;] [Private] [Int] [Add, Event, Count] [;] [Private] [Int] [Remove, Event, Count] [;] [Int] [Counter] [;] [Private] [Static] [Final] [String[]] [Patterns=new, String[]{"{key2,va12}{key1,va11}","{key2,value2}{key1,value1}"}] [;] [Private] [Static] [Final] [String[]] [Replacements=new, String[]{"{key1,va11}{key2,va12}","{key1,value1}{key2,value2}"}] [;] [Static] [String] [Filtered="output/filtered"] [;] [Static] [String] [Exception1="java.lang., Exception: , Just testing"] [;] [Static] [String] [Exception2="\\s*at .*\\(.*\\)"] [;] [Static] [String] [Exception3="\\s*at .*\\(, Native , Method\\)"] [;] [Static] [String] [Exception4="\\s*at .*\\(.*, Compiled , Code\\)"] [;] [Static] [String] [Exception5="\\s*at .*\\(.*libgcj.*\\)"] [;] [Static] [String] [Ttcc, Pat=, Filter., Absolute, Date, And, Time, Pat+" \\[main]\\ (, Trace|, Debug|, Info|, Warn|, Error|, Fatal) .* - , Message \\d{1,2}"] [;] [Static] [String] [Ttcc2, Pat=, Filter., Absolute, Date, And, Time, Pat+" \\[main]\\ (, Trace|, Debug|, Info|, Warn|, Error|, Fatal) .* - , Messages should bear numbers 0 through 29\\."] [;] [Logger] [Root] [;] [Logger] [Logger] [;] [Int] [Counter=0] [;] [Static] [Logger] [Cat=, Logger.get, Logger(, Short, Socket, Server.class)] [;] [Private] [Static] [Logger] [Logger] [;] [Private] [Static] [Last, Only, Appender] [Secondary] [;] [Private] [Logging, Event] [Last, Event] [;] [Static] [String] [Temp="output/temp"] [;] [Static] [String] [Filtered="output/filtered"] [;] [Static] [String] [Pat1="^(, Trace|, Debug| , Info| , Warn|, Error|, Fatal|, Lethal) , T1 \\[main]\\ "+".* , Message \\d{1,2}"] [;] [Static] [String] [Pat2="^(, Trace|, Debug| , Info| , Warn|, Error|, Fatal|, Lethal) , T2 \\[main]\\ "+"\\? \\(\\?:\\?\\) , Message \\d{1,2}"] [;] [Static] [String] [Pat3="^(, Trace|, Debug| , Info| , Warn|, Error|, Fatal|, Lethal) , T3 \\[main]\\ "+"org.apache.log4j.net., Socket, Server, Test, Case "+"\\(, Socket, Server, Test, Case.java:\\d{3}\\) , Message \\d{1,2}"] [;] [Static] [String] [Pat4="^(, Trace|, Debug| , Info| , Warn|, Error|, Fatal|, Lethal) some , T4 , Mdc-, Test4 \\[main]\\"+" (root|, Socket, Server, Test, Case) - , Message \\d{1,2}"] [;] [Static] [String] [Pat5="^(, Trace|, Debug| , Info| , Warn|, Error|, Fatal|, Lethal) some5 , T5 , Mdc-, Test5 \\[main]\\"+" (root|, Socket, Server, Test, Case) - , Message \\d{1,2}"] [;] [Static] [String] [Pat6="^(, Trace|, Debug| , Info| , Warn|, Error|, Fatal|, Lethal) some6 , T6 client-test6 , Mdc-, Test6"+" \\[main]\\ (root|, Socket, Server, Test, Case) - , Message \\d{1,2}"] [;] [Static] [String] [Pat7="^(, Trace|, Debug| , Info| , Warn|, Error|, Fatal|, Lethal) some7 , T7 client-test7 , Mdc-, Test7"+" \\[main]\\ (root|, Socket, Server, Test, Case) - , Message \\d{1,2}"] [;] [Static] [String] [Pat8="^(, Trace|, Debug| , Info| , Warn|, Error|, Fatal|, Lethal) some8 , T8 short, Socket, Server"+" , Mdc-, Test8 \\[main]\\ (root|, Socket, Server, Test, Case) - , Message \\d{1,2}"] [;] [Static] [String] [Exception1="java.lang., Exception: , Just testing"] [;] [Static] [String] [Exception2="\\s*at .*\\(.*\\)"] [;] [Static] [String] [Exception3="\\s*at .*\\(, Native , Method\\)"] [;] [Static] [String] [Exception4="\\s*at .*\\(.*, Compiled , Code\\)"] [;] [Static] [String] [Exception5="\\s*at .*\\(.*libgcj.*\\)"] [;] [Static] [Logger] [Logger=, Logger.get, Logger(, Socket, Server, Test, Case.class)] [;] [Static] [Public] [Final] [Int] [Port=12345] [;] [Static] [Logger] [Root, Logger=, Logger.get, Root, Logger()] [;] [Socket, Appender] [Socket, Appender] [;] [Private] [Static] [Final] [Long] [Serial, Version, Uid=1, L] [;] [Int] [Port=54353] [;] [Byte, Array, Output, Stream] [Bo=new, Byte, Array, Output, Stream()] [;] [Static] [Ut, Object, Renderer] [Aor] [;] [Static] [Ut, Object, Renderer] [Bor] [;] [Static] [Ut, Object, Renderer] [Xor] [;] [Static] [Ut, Object, Renderer] [Yor] [;] [Static] [Ut, Object, Renderer] [Oor] [;] [Static] [Ut, Object, Renderer] [Nor] [;] [Static] [Ut, Object, Renderer] [Ior] [;] [Static] [Ut, Object, Renderer] [Cor] [;] [Static] [Ut, Object, Renderer] [Sor] [;] [String] [Name] [;] [Private] [Static] [Final] [Time, Zone] [Gmt=, Time, Zone.get, Time, Zone(", Gmt")] [;] [Private] [Static] [Final] [Time, Zone] [Chicago=, Time, Zone.get, Time, Zone(", America/, Chicago")] [;] [Private] [Static] [Final] [Num343, Pattern, Converter] [Instance=new, Num343, Pattern, Converter()] [;] [Private] [Final] [Logger] [Logger=, Logger.get, Logger("org.foobar")] [;] [Private] [Final] [Logging, Event] [Event] [;] [Static] [String] [Temp="output/temp"] [;] [Static] [String] [Filtered="output/filtered"] [;] [Logger] [Root] [;] [Logger] [Logger] [;] [Static] [String] [Exception1="java.lang., Exception: , Just testing"] [;] [Static] [String] [Exception2="\\s*at .*\\(.*\\)"] [;] [Static] [String] [Exception3="\\s*at .*\\(, Native , Method\\)"] [;] [Static] [String] [Exception4="\\s*at .*\\(.*, Compiled , Code\\)"] [;] [Static] [String] [Exception5="\\s*at .*\\(.*libgcj.*\\)"] [;] [Static] [String] [Pat0="\\[main]\\ (, Trace|, Debug|, Info |, Warn |, Error|, Fatal) .* - , Message \\d{1,2}"] [;] [Static] [String] [Pat1=, Filter., Iso8601, Pat+" "+, Pat0] [;] [Static] [String] [Pat2=, Filter., Absolute, Date, And, Time, Pat+" "+, Pat0] [;] [Static] [String] [Pat3=, Filter., Absolute, Time, Pat+" "+, Pat0] [;] [Static] [String] [Pat4=, Filter., Relative, Time, Pat+" "+, Pat0] [;] [Static] [String] [Pat5="\\[main]\\ (, Trace|, Debug|, Info |, Warn |, Error|, Fatal) .* : , Message \\d{1,2}"] [;] [Static] [String] [Pat6="\\[main]\\ (, Trace|, Debug|, Info |, Warn |, Error|, Fatal) org.apache.log4j., Pattern, Layout, Test, Case.common\\(, Pattern, Layout, Test, Case.java(:\\d{1,4})?\\): , Message \\d{1,2}"] [;] [Static] [String] [Pat11a="^(, Trace|, Debug|, Info |, Warn |, Error|, Fatal) \\[main]\\ log4j., Pattern, Layout, Test, Case: , Message \\d{1,2}"] [;] [Static] [String] [Pat11b="^(, Trace|, Debug|, Info |, Warn |, Error|, Fatal) \\[main]\\ root: , Message \\d{1,2}"] [;] [Static] [String] [Pat12="^\\[main]\\ (, Trace|, Debug|, Info |, Warn |, Error|, Fatal) "+"org.apache.log4j., Pattern, Layout, Test, Case.common\\(, Pattern, Layout, Test, Case.java:\\d{3}\\): "+", Message \\d{1,2}"] [;] [Static] [String] [Pat13="^\\[main]\\ (, Trace|, Debug|, Info |, Warn |, Error|, Fatal) "+"apache.log4j., Pattern, Layout, Test, Case.common\\(, Pattern, Layout, Test, Case.java:\\d{3}\\): "+", Message \\d{1,2}"] [;] [Static] [String] [Pat14="^(, Trace|, Debug| , Info| , Warn|, Error|, Fatal)\\ \\d{1,2}\\ *- , Message \\d{1,2}"] [;] [Private] [Boolean] [Activated=false] [;] [Private] [String] [Active, File, Name] [;] [Private] [String] [File, Name, Pattern] [;] [Private] [Int] [Min, Index] [;] [Private] [Boolean] [Activated=false] [;] [Private] [Filter] [Filter] [;] [Private] [Rolling, Policy] [Rolling, Policy] [;] [Private] [Triggering, Policy] [Triggering, Policy] [;] [Private] [Boolean] [Append] [;] [Private] [Boolean] [Activated=false] [;] [Private] [Boolean] [Show, Version=true] [;] [Private] [Final] [Object] [P2] [;] [Private] [Final] [Object] [X1] [;] [Private] [Final] [Object] [Msg] [;] [Private] [Static] [Final] [Long] [Serial, Version, Uid=1, L] [;] [Private] [Static] [Final] [Long] [Serial, Version, Uid=1, L] [;] [Private] [Static] [Final] [Long] [Serial, Version, Uid=1, L] [;] [Private] [Static] [Final] [Long] [Serial, Version, Uid=1, L] [;] [Private] [Static] [Final] [Long] [Serial, Version, Uid=1, L] [;] [Private] [Final] [String] [Stack, Trace] [;] [Private] [Static] [Final] [Long] [Serial, Version, Uid=1, L] [;] [Static] [Level[]] [Level=new, Level[]{, Level., Debug,, Level., Info,, Level., Warn,, Level., Error,, Level., Fatal}] [;] [Static] [Level] [Default, Level=, Logger.get, Root, Logger().get, Level()] [;] [Static] [Int] [Length] [;] [Static] [String[]] [Names] [;] [Static] [Logger[]] [Cat] [;] [Static] [Ct[]] [Ct] [;] [Static] [Random] [Random=new, Random(10)] [;] [Public] [String] [Catstr] [;] [Public] [Level] [Level] [;] [Private] [Static] [Final] [Level] [Trace=get, Trace, Level()] [;] [Private] [Final] [Logger] [Logger=, Logger.get, Logger("org.apache.log4j.formatter., Test, Log, Mf")] [;] [Private] [Static] [Final] [String] [Bundle, Name="org.apache.log4j., Test, Log, Mf, Patterns"] [;] [Private] [Static] [Final] [Level] [Trace=get, Trace, Level()] [;] [Private] [Final] [Logger] [Logger=, Logger.get, Logger("org.apache.log4j.formatter., Test, Log, Sf")] [;] [Private] [Static] [Final] [String] [Bundle, Name="org.apache.log4j., Test, Log, Sf, Patterns"] [;] [Private] [Final] [Logger] [Logger=, Logger.get, Logger("org.apache.log4j.formatter., Test, Log, Xf")] [;] [Public] [Static] [Bad, Stringifier] [Instance=new, Bad, Stringifier()] [;] [Perl5, Util] [Util=new, Perl5, Util()] [;] [Perl5, Util] [Util=new, Perl5, Util()] [;] [Static] [Final] [Int] [B1, Null=-1] [;] [Static] [Final] [Int] [B2, Null=-2] [;] [Perl5, Util] [Util=new, Perl5, Util()] [;] [String[]] [Allowed, Patterns] [;] [Private] [Perl5, Util] [Util=new, Perl5, Util()] [;] [Private] [Static] [Final] [String[]] [Patterns={"at org.eclipse.jdt.internal.junit.runner., Remote, Test, Runner","at org.apache.tools.ant","at junit.textui., Test, Runner","at com.intellij.rt.execution.junit","at java.lang.reflect., Method.invoke","at org.apache.maven.","at org.codehaus.","at org.junit.internal.runners.","at junit.framework., J, Unit4, Test, Adapter"}] [;] [Private] [Pattern] [Line, Pattern] [;] [Private] [Pattern] [Native, Pattern] [;] [Perl5, Util] [Util=new, Perl5, Util()] [;] [Perl5, Util] [Util=new, Perl5, Util()] [;] [Perl5, Util] [Util=new, Perl5, Util()] [;] [Perl5, Util] [Util=new, Perl5, Util()] [;] [Perl5, Util] [Util=new, Perl5, Util()] [;] [Private] [Static] [Final] [Long] [Serial, Version, Uid=1787725660780924147, L] [;] [Perl5, Util] [Util=new, Perl5, Util()] [;] [Perl5, Util] [Util=new, Perl5, Util()] [;] [Static] [String] [Temp="output/temp"] [;] [Static] [String] [Filtered="output/filtered"] [;] [Static] [String] [Exception1="java.lang., Exception: , Just testing"] [;] [Static] [String] [Exception2="\\s*at .*\\(.*\\)"] [;] [Static] [String] [Exception3="\\s*at .*\\(, Native , Method\\)"] [;] [Static] [String] [Test1, Pat=", Fallback - (root|test) - , Message \\d"] [;] [Logger] [Root] [;] [Logger] [Logger] [;] [Static] [String] [Accept, File="output/, Level, Match, FilterAccept"] [;] [Static] [String] [Accept, Filtered="output/, Level, Match, FilterAcceptFiltered"] [;] [Static] [String] [Accept, Witness="witness/, Level, Match, FilterAccept"] [;] [Static] [String] [Deny, File="output/, Level, Match, FilterDeny"] [;] [Static] [String] [Deny, Filtered="output/, Level, Match, FilterDenyFiltered"] [;] [Static] [String] [Deny, Witness="witness/, Level, Match, FilterDeny"] [;] [Logger] [Root] [;] [Logger] [Logger] [;] [Public] [Vector] [Vector] [;] [Private] [Logger] [Logger] [;] [Private] [Appender] [Appender] [;] [Private] [Appender] [Backup, Appender] [;] [Private] [Final] [Vector] [Errors=new, Vector()] [;] [Static] [String] [Temp="output/temp"] [;] [Logger] [Root] [;] [Logger] [Logger] [;] [Static] [String] [Temp, A1="output/temp., A1"] [;] [Static] [String] [Temp, A2="output/temp., A2"] [;] [Static] [String] [Filtered, A1="output/filtered., A1"] [;] [Static] [String] [Filtered, A2="output/filtered., A2"] [;] [Static] [String] [Exception1="java.lang., Exception: , Just testing"] [;] [Static] [String] [Exception2="\\s*at .*\\(.*\\)"] [;] [Static] [String] [Exception3="\\s*at .*\\(, Native , Method\\)"] [;] [Static] [String] [Exception4="\\s*at .*\\(.*, Compiled , Code\\)"] [;] [Static] [String] [Exception5="\\s*at .*\\(.*libgcj.*\\)"] [;] [Static] [String] [Test11, A, Pat="(, Trace|, Debug|, Info |, Warn |, Error|, Fatal) \\w*\\.\\w* - , Message \\d"] [;] [Static] [String] [Test11, B, Pat="(, Trace|, Debug|, Info |, Warn |, Error|, Fatal) root - , Message \\d"] [;] [Static] [String] [Test12, Pat="^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2},\\d{3} "+"\\[main]\\ (, Trace|, Debug|, Info|, Warn|, Error|, Fatal) .* - , Message \\d"] [;] [Logger] [Root] [;] [Logger] [Logger] [;] [Private] [Boolean] [Additivity] [;] [Private] [Boolean] [Activated=false] [;] [Private] [Boolean] [Show, Version=true] [;] [Private] [Static] [Final] [Long] [Serial, Version, Uid=7288304330257085144, L] [;] [Static] [Public] [Final] [Int] [Trace, Int=, Level., Debug, Int-1] [;] [Static] [Public] [Final] [Int] [Lethal, Int=, Level., Fatal, Int+1] [;] [Private] [Static] [String] [Trace, Str=", Trace"] [;] [Private] [Static] [String] [Lethal, Str=", Lethal"] [;] [Public] [Static] [Final] [X, Level] [Trace=new, X, Level(, Trace, Int,, Trace, Str,7)] [;] [Public] [Static] [Final] [X, Level] [Lethal=new, X, Level(, Lethal, Int,, Lethal, Str,0)] [;] [Private] [Static] [Final] [Long] [Serial, Version, Uid=1, L] [;] [Static] [String] [Temp="output/temp"] [;] [Static] [String] [Filtered="output/filtered"] [;] [Logger] [Root] [;] [Logger] [Logger] [;] [Logger] [Logger=, Logger.get, Logger(, X.class)] [;]